/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-04-09 07:09:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex04_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1712627748377L));
    _jspx_dependants.put("jar:file:/C:/class/code/server/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/AjaxTest/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://pinnpublic.dothome.co.kr/cdn/example-min.css\">\r\n");
      out.write("<style>\r\n");
      out.write("	div > div { margin-bottom: 5px; }\r\n");
      out.write("	#loader { display: none; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- ex04.jsp -->\r\n");
      out.write("	<h1>Ajax</h1>\r\n");
      out.write("	\r\n");
      out.write("	<!--  \r\n");
      out.write("	\r\n");
      out.write("		Ajax, Asynchronous JavaScript and XML\r\n");
      out.write("		\r\n");
      out.write("		비동기 통신 vs 동기 통신\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("		1. GET\r\n");
      out.write("		- 주고 + 받기\r\n");
      out.write("	-->\r\n");
      out.write("	<div>\r\n");
      out.write("		<div><input type=\"text\" id=\"txt1\"></div>\r\n");
      out.write("		<div><input type=\"button\" value=\"확인\" id=\"btn1\"></div>\r\n");
      out.write("		<div id=\"div1\"></div>\r\n");
      out.write("		<div><img src=\"/ajax/images/loader.gif\" id=\"loader\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<!--  \r\n");
      out.write("		2. GET\r\n");
      out.write("		- 주기\r\n");
      out.write("	-->\r\n");
      out.write("	<div>\r\n");
      out.write("		<div><input type=\"text\" id=\"txt2\"></div>\r\n");
      out.write("		<div><input type=\"button\" value=\"확인\" id=\"btn2\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<!--  \r\n");
      out.write("		3. GET\r\n");
      out.write("		- 받기\r\n");
      out.write("	-->\r\n");
      out.write("	<div>\r\n");
      out.write("		<div><input type=\"button\" value=\"확인\" id=\"btn3\"></div>\r\n");
      out.write("		<div id=\"div3\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<!--  \r\n");
      out.write("		4. POST\r\n");
      out.write("		- 주고 + 받기\r\n");
      out.write("	-->\r\n");
      out.write("	<div>\r\n");
      out.write("		<div><input type=\"text\" id=\"txt4\"></div>\r\n");
      out.write("		<div><input type=\"button\" value=\"확인\" id=\"btn4\"></div>\r\n");
      out.write("		<div id=\"div4\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!--  \r\n");
      out.write("		5. GET\r\n");
      out.write("		- 주고 + 받기\r\n");
      out.write("	-->\r\n");
      out.write("	<div>\r\n");
      out.write("		<div><input type=\"text\" id=\"txt5\"></div>\r\n");
      out.write("		<div><input type=\"button\" value=\"확인\" id=\"btn5\"></div>\r\n");
      out.write("		<div id=\"div5\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<div><input type=\"text\"></div>\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		$('#btn1').click(()=>{\r\n");
      out.write("			\r\n");
      out.write("			const ajax = new XMLHttpRequest();\r\n");
      out.write("			\r\n");
      out.write("			ajax.onreadystatechange = function(evt) {\r\n");
      out.write("				if (ajax.readyState == 4 && ajax.status == 200) {\r\n");
      out.write("					\r\n");
      out.write("					$('#div1').text(ajax.responseText); //보낸 문자열의 글자수\r\n");
      out.write("					$('#loader').hide();\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			};\r\n");
      out.write("			\r\n");
      out.write("			//GET 호출 + 데이터 전송 = Query String\r\n");
      out.write("			ajax.open('GET', '/ajax/ex04data.do?txt1=' + $('#txt1').val(), true);\r\n");
      out.write("			\r\n");
      out.write("			ajax.send();\r\n");
      out.write("			\r\n");
      out.write("			$('#loader').show();\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#btn2').click(() => {\r\n");
      out.write("			\r\n");
      out.write("			const ajax = new XMLHttpRequest();\r\n");
      out.write("			\r\n");
      out.write("			//onreadystatechange > 데이터 수신할 때 사용\r\n");
      out.write("			\r\n");
      out.write("			ajax.open('GET', '/ajax/ex04data.do?txt2=' + $('#txt2').val());\r\n");
      out.write("			\r\n");
      out.write("			ajax.send();\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#btn3').click(() => {\r\n");
      out.write("			\r\n");
      out.write("			const ajax = new XMLHttpRequest();\r\n");
      out.write("			\r\n");
      out.write("			ajax.onreadystatechange = function() {\r\n");
      out.write("				if (ajax.readyState == 4 && ajax.status == 200) {\r\n");
      out.write("					$('#div3').text(ajax.responseText);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			ajax.open('GET', '/ajax/ex04data.do');\r\n");
      out.write("			\r\n");
      out.write("			ajax.send();\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#btn4').click(()=>{\r\n");
      out.write("			\r\n");
      out.write("			const ajax = new XMLHttpRequest();\r\n");
      out.write("			\r\n");
      out.write("			ajax.onreadystatechange = function() {\r\n");
      out.write("				if (ajax.readyState == 4 && ajax.status == 200) {\r\n");
      out.write("					\r\n");
      out.write("					$('#div4').text(ajax.responseText);\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			};\r\n");
      out.write("			\r\n");
      out.write("			ajax.open('POST', '/ajax/ex04data.do');\r\n");
      out.write("			\r\n");
      out.write("			ajax.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n");
      out.write("			\r\n");
      out.write("			//POST 데이터 전송\r\n");
      out.write("			ajax.send('txt4=' + $('#txt4').val());\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#btn5').click(() => {\r\n");
      out.write("			\r\n");
      out.write("			/*\r\n");
      out.write("			//$(태그).css()\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				\r\n");
      out.write("				//페이지 요청 정보\r\n");
      out.write("				type: 'GET',\r\n");
      out.write("				url: '/ajax/ex04data.do',\r\n");
      out.write("				\r\n");
      out.write("				//데이터 전송\r\n");
      out.write("				data: 'txt1=' + $('#txt5').val(),\r\n");
      out.write("				\r\n");
      out.write("				//결과 수신 이벤트\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					\r\n");
      out.write("					$('#div5').text(result);\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			*/\r\n");
      out.write("			\r\n");
      out.write("			//주기\r\n");
      out.write("			/*\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'GET',\r\n");
      out.write("				url: '/ajax/ex04data.do',\r\n");
      out.write("				data: 'txt2=100'\r\n");
      out.write("			});\r\n");
      out.write("			*/\r\n");
      out.write("			\r\n");
      out.write("			//받기\r\n");
      out.write("			/*\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'GET',\r\n");
      out.write("				url: '/ajax/ex04data.do',\r\n");
      out.write("				success: function(result){\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			*/\r\n");
      out.write("			\r\n");
      out.write("			//POST\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				url: '/ajax/ex04data.do',\r\n");
      out.write("				data: 'txt4=' + $('#txt5').val(),\r\n");
      out.write("				success: function(result){\r\n");
      out.write("					$('#div5').text(result);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
