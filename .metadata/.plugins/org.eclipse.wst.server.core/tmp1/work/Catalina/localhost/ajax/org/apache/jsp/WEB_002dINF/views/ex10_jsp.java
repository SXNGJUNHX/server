/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-04-11 07:47:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex10_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1712627748377L));
    _jspx_dependants.put("jar:file:/C:/class/code/server/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/AjaxTest/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://pinnpublic.dothome.co.kr/cdn/example-min.css\">\r\n");
      out.write("<style>\r\n");
      out.write("	#list th:nth-child(1) { width: 50px; }\r\n");
      out.write("	#list th:nth-child(2) { width: 70px; }\r\n");
      out.write("	#list th:nth-child(3) { width: 60px; }\r\n");
      out.write("	#list th:nth-child(4) { width: 60px; }\r\n");
      out.write("	#list th:nth-child(5) { width: auto; }\r\n");
      out.write("	#list td { text-align: center; }\r\n");
      out.write("	#list td:nth-child(5) { text-align: left; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- ex10.jsp -->\r\n");
      out.write("	<h1>주소록 <small>Ajax</small></h1>\r\n");
      out.write("	\r\n");
      out.write("	<table id=\"list\">\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>번호</th>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<th>나이</th>\r\n");
      out.write("				<th>성별</th>\r\n");
      out.write("				<th>주소</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody>\r\n");
      out.write("			");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<form id=\"form2\">\r\n");
      out.write("	<div>\r\n");
      out.write("		<label>이름: </label>\r\n");
      out.write("		<input type=\"text\" name=\"name\" id=\"name\">\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label>나이: </label>\r\n");
      out.write("		<input type=\"number\" name=\"age\" id=\"age\">\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label>성별: </label>\r\n");
      out.write("		<select name=\"gender\" id=\"gender\">\r\n");
      out.write("			<option value=\"m\">남자</option>\r\n");
      out.write("			<option value=\"f\">여자</option>\r\n");
      out.write("		</select>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>\r\n");
      out.write("		<label>주소: </label>\r\n");
      out.write("		<input type=\"text\" name=\"address\" id=\"address\">\r\n");
      out.write("	</div>\r\n");
      out.write("	<div><input type=\"button\" value=\"추가하기\" id=\"btn2\"></div>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<h1>데이터 전송하기</h1>\r\n");
      out.write("	\r\n");
      out.write("	<form id=\"form1\">\r\n");
      out.write("	<table class=\"vertical\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>숫자</th>\r\n");
      out.write("			<td><input type=\"text\" name=\"num1\" id=\"num1\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>숫자</th>\r\n");
      out.write("			<td><input type=\"text\" name=\"num2\" id=\"num2\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>숫자</th>\r\n");
      out.write("			<td><input type=\"text\" id=\"num3\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<div>\r\n");
      out.write("		<input type=\"button\" value=\"보내기\" id=\"btn1\">\r\n");
      out.write("	</div>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		$('#btn1').click(() => {\r\n");
      out.write("			\r\n");
      out.write("			//직렬화\r\n");
      out.write("			//- 객체를 일련의 한줄의 문자열로 만드는 작업\r\n");
      out.write("			\r\n");
      out.write("			//num1=100&num2=200&num3=300\r\n");
      out.write("			//num1=100&num2=&num3=300\r\n");
      out.write("			//num1=111&num2=222\r\n");
      out.write("			//alert($('#form1').serialize());\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				url: '/ajax/ex10data.do',\r\n");
      out.write("				\r\n");
      out.write("				//data: 'num1=' + $('#num1').val() + '&num2=' + $('#num2').val() + '&num3=' + $('#num3').val(),\r\n");
      out.write("				\r\n");
      out.write("				//data: $('#form1').serialize(),\r\n");
      out.write("				\r\n");
      out.write("				data: {\r\n");
      out.write("					num1: $('#num1').val(),\r\n");
      out.write("					num2: $('#num2').val(),\r\n");
      out.write("					num3: $('#num3').val(),\r\n");
      out.write("					id: 'hong',\r\n");
      out.write("					color: 'yellow'\r\n");
      out.write("				},\r\n");
      out.write("				\r\n");
      out.write("				error: function(a,b,c) {\r\n");
      out.write("					console.log(a,b,c);\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$('#btn2').click(()=>{\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				url: '/ajax/ex10add.do',\r\n");
      out.write("				data: $('#form2').serialize(),\r\n");
      out.write("				dataType: 'json',\r\n");
      out.write("				success: function(result) {\r\n");
      out.write("					//alert(result.result);\r\n");
      out.write("					\r\n");
      out.write("					if (result.result == '1') {\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("						//테이블에 방금 추가한 항목을 동적으로 추가하기\r\n");
      out.write("						$('#list tbody').append(`\r\n");
      out.write("						\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>${result.seq}</td>\r\n");
      out.write("								<td>${$('#name').val()}</td>\r\n");
      out.write("								<td>${$('#age').val()}</td>\r\n");
      out.write("								<td>${$('#gender').val() == 'm' ? '남자' : '여자'}</td>\r\n");
      out.write("								<td>${$('#address').val()}</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("								\r\n");
      out.write("						`);\r\n");
      out.write("						\r\n");
      out.write("						$('#name').val('');\r\n");
      out.write("						$('#age').val('');\r\n");
      out.write("						$('#address').val('');\r\n");
      out.write("						$('#gender').val('m');\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("					} else {\r\n");
      out.write("						alert('failed');\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error: function(a,b,c) {\r\n");
      out.write("					console.log(a,b,c);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#address').keydown(()=>{\r\n");
      out.write("			if (event.keyCode == 13) {\r\n");
      out.write("				$('#btn2').click();\r\n");
      out.write("				$('#address').blur();\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/ex10.jsp(35,3) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/ex10.jsp(35,3) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/ex10.jsp(35,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("dto");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("			<tr>\r\n");
            out.write("				<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("				<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("				<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.age}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("				<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.gender == 'm' ? '남자' : '여자'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("				<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.address}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("			</tr>\r\n");
            out.write("			");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
